AddCSLuaFile()

local EVENT = {}

local LOG_ID = "[RANDOMAT] [TPNA] "

CreateConVar("randomat_tompleasenotagain_spawn_time", 45, {FCVAR_NOTIFY, FCVAR_ARCHIVE}, "Seconds between barrel spawns.")
CreateConVar("randomat_tompleasenotagain_exp_radius", 100, {FCVAR_NOTIFY, FCVAR_ARCHIVE}, "Radius of explosions.")

EVENT.Title = "Tom Please Not Again"
EVENT.id = "tompleasenotagain"

function spawnBarrel()
    local players = {}
    for k, player in pairs(player.GetAll()) do
        if not player:IsSpec() then
            players[k] = player
        end
    end

    local player = table.Random(players)

    if player and player:Alive() and not player:IsSpec() then
        if CLIENT then return end

        -- Spawn the explosive barrels
        local ent = ents.Create("prop_physics")
        if (not IsValid(ent)) then return end

        local look = player:EyeAngles():Forward() -- Get look as a vector
        local flatLook = (look * Vector(1, 0, 1)):GetNormalized() -- Flatten the look direction onto the XZ plane, and normalize it

        ent:SetModel("models/props_c17/oildrum001_explosive.mdl")
        -- TODO: Should this be a cvar?
        -- ent:SetPos(player:GetPos() + Vector(math.random(-100, 100), math.random(-100, 100), 100)) -- Spawn slightly offset from player
        ent:SetPos(player:GetPos() + (flatLook * Vector(math.random(50, 150), 0, math.random(50, 150))) + Vector(0, math.random(0, 100), 0))
        ent:Spawn()

        local phys = ent:GetPhysicsObject()
        if (not IsValid(phys)) then ent:Remove() return end

        -- TODO Set the explosion radius???
        --  explosions are simply effects generated by source
        --  radius is not handled by entities or their physics object

        Randomat:EventNotifySilent("Tom please don't kill " .. player:GetNick())
    end
end

function EVENT:Begin()
    -- TODO: Set explosion radius
    spawnBarrel()
    timer.Create("RandomatBarrelSpawnTimer", GetConVar("randomat_tompleasenotagain_spawn_time"):GetInt(), 0, spawnBarrel)
end

function EVENT:GetConVars()
    local sliders = {}
    for _, v in pairs({"spawn_time", "exp_radius"}) do
        local name = "randomat_" .. self.id .. "_" .. v
        if ConVarExists(name) then
            local convar = GetConVar(name)
            table.insert(sliders, {
                cmd = v,
                dsc = convar:GetHelpText(),
                min = convar:GetMin(),
                max = convar:GetMax(),
                dcm = 0 -- Number of decimal points to support (precision)
            })
        end
    end

    local checks = {}
    local textboxes = {}

    return sliders, checks, textboxes
end

function EVENT:End()
    timer.Remove("RandomatBarrelSpawnTimer")
end

Randomat:register(EVENT)

